@page "/registration"

@attribute [AllowAnonymous]

@inject NavigationManager Navigation
@inject IJwtAuthService AuthService
@inject IToastService Notification
@layout AuthLayout

<PageTitle>Registration</PageTitle>

<div class="card col-md-6 offset-3" style="margin: auto">
    <div class="card-header">
        <h3 class="text-center fw-bold text-primary">Enter your data to register</h3>
    </div>
    <div class="card-body">
        <EditForm Model="@RegistrationData" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary style="color:indianred" Model="@RegistrationData" />
            <div class="form-group">
                <label for="name" class="form-label">Username:</label>
                <InputText id="name" @bind-Value="@RegistrationData.UserName" class="form-control"></InputText>
                <ValidationMessage For="() => RegistrationData.UserName"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <label for="Email" class="form-label">Email address:</label>
                <InputText id="Email" @bind-Value="@RegistrationData.Email" class="form-control"></InputText>
                <ValidationMessage For="() => RegistrationData.Email"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <label for="Password" class="form-label">Password:</label>
                <InputText type="password" id="Password" @bind-Value="RegistrationData.Password" class="form-control"></InputText>
                <ValidationMessage For="() => RegistrationData.Password"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <label for="ConfirmPassword" class="form-label">Repeat password:</label>
                <InputText type="password" id="ConfirmPassword" @bind-Value="RegistrationData.RepeatPassword" class="form-control"></InputText>
                <ValidationMessage For="() => RegistrationData.RepeatPassword"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <button class="btn btn-outline-primary float-end" disabled="@IsSubmitDisabled" type="submit">Register</button>
            </div>
        </EditForm>
    </div>
</div>
<div class="row justify-content-center" style="margin: 10px">
    <NavLink class="nav-link d-block mx-auto text-center" href="@LoginPage.Path">
        Already have an account? Login here
    </NavLink>
</div>


@code 
{
    public const string Path = "/registration";
    public RegistrationDto RegistrationData { get; set; } = new();
    public bool IsSubmitDisabled;

    public async Task HandleSubmit()
    {
        IsSubmitDisabled = true;
        var registrationResult = await AuthService!.RegisterAsync(RegistrationData);
        if (registrationResult is not null)
        {
            Notification!.ShowError(registrationResult.Message);
            IsSubmitDisabled = false;
        }
        else
        {
            Navigation!.NavigateTo("/", true);
        }
    }
}